swagger: '2.0'
info:
  title: Functions REST API
  version: '1.0'
  description: |
    The Functions REST API is a secondary API provided by the Query service.
    This API enables you to manage the JavaScript libraries and objects that are used to create N1QL user-defined functions.

    The API schemes and host URLs are as follows:{blank}

    * `+http://node:8093/+`
    * `+https://node:18093/+` (for secure access)

    where [.var]`node` is the host name or IP address of a computer running the N1QL query engine.

produces:
  - application/json

consumes:
  - application/json

paths:
  /evaluator/v1/libraries/:
    get:
      operationId: get_collection
      summary: Read All Libraries
      description: Returns all libraries and functions.
      security:
        - Default: []
      responses:
        "200":
          description: An object with multiple properties, each giving information about a single library.
          schema:
            $ref: "#/definitions/Libraries"
        "404":
          description: |
            Not found.
            The path may be missing its trailing slash.
        "406":
          $ref: "#/responses/NotAcceptable"

  /evaluator/v1/libraries/{library}:
    parameters:
      - $ref: "#/parameters/PathLibrary"
    get:
      operationId: get_library
      summary: Read a Library
      description: Returns a library with all its functions.
      security:
        - Default: []
      responses:
        "200":
          description: An object with a single property, giving information about the specified library.
          schema:
            $ref: "#/definitions/Libraries"
        "404":
          $ref: "#/responses/LibraryNotFound"
        "406":
          $ref: "#/responses/NotAcceptable"
    post:
      operationId: post_library
      summary: Create or Update a Library
      description: |
        Creates the specified library and its associated functions.
        If the specified library exists, the existing library is overwritten.
      parameters:
        - $ref: "#/parameters/BodyLibrary"
      security:
        - Default: []
      responses:
        "200":
          $ref: "#/responses/OK"
        "400":
          $ref: "#/responses/BadRequest"
        "406":
          $ref: "#/responses/NotAcceptable"
    delete:
      operationId: delete_library
      summary: Delete a Library
      description: Deletes the specified library entirely.
      security:
        - Default: []
      responses:
        "200":
          $ref: "#/responses/OK"
        "404":
          $ref: "#/responses/LibraryNotFound"
        "406":
          $ref: "#/responses/NotAcceptable"

parameters:
  PathLibrary:
    name: library
    type: string
    in: path
    required: true
    description: The name of a library.

  BodyLibrary:
    in: body
    name: functions
    required: true
    description: The JavaScript code for all functions in the library.
    schema:
      type: string
      example: function f2c(f) { return (5/9)*(f-32); }

definitions:
  Libraries:
    type: object
    title: Library Definition
    properties:
      __library__:
        type: string
        description: |
          The JavaScript code for all functions in the library.

          The name of the property is the name of the library.
        example: function add(a, b) { return a + b; }
                 function mul(a, b) { return a * b; }
    required:
      - __library__

responses:
  OK:
    description: The operation was successful.
    schema:
      type: string

  LibraryNotFound:
    description: |
      Not found.
      The library name in the path may be incorrect.
    schema:
      type: string

  BadRequest:
    description: |
      Bad request.
      The body of the request may be incorrect.
    schema:
      type: string

  NotAcceptable:
    description: |
      Not acceptable.
      The path may not conform to the schema.
    schema:
      type: string

securityDefinitions:
  Default:
    type: basic
    description: |
      The Functions API supports admin credentials.
      Credentials can be passed via HTTP headers (HTTP basic authentication).
