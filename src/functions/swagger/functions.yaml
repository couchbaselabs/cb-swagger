swagger: '2.0'
info:
  title: Functions REST API
  version: '7.1'
  description: >
    The Functions REST API is a secondary API provided by the Query service.
    This API enables you to manage the JavaScript libraries and objects that are used to create N1QL user-defined functions.


    The base URL schemes for this API are as follows:


    * http://node:8093/

    * https://node:18093/ (for secure access)


    where `node` is the host name or IP address of a computer running the N1QL query engine.

produces:
  - application/json

consumes:
  - application/json

host: localhost:8093

schemes:
  - http
#   - https

paths:
  /evaluator/v1/libraries:
    get:
      operationId: get_collection
      summary: Read All Libraries
      parameters:
        - name: bucket
          type: string
          in: query
          required: false
          description: >
            For scoped libraries only.
            The bucket from which to fetch libraries.
        - name: scope
          type: string
          in: query
          required: false
          description: >
            For scoped libraries only.
            The scope from which to fetch libraries.
      description: >
        Returns all libraries and functions.


        By default, this operation returns all global libraries and functions, and all scoped libraries and functions.
        To return all the libraries and functions in a single scope, specify a bucket and scope.
      security:
        - Global: []
        - Scope: []
      responses:
        "200":
          description: An array of objects, each giving information about a single library.
          schema:
            type: array
            items:
              $ref: "#/definitions/Libraries"
        "400":
          $ref: "#/responses/BadRequest"

  /evaluator/v1/libraries/{library}:
    parameters:
      - $ref: "#/parameters/PathLibrary"
      - $ref: "#/parameters/QueryBucket"
      - $ref: "#/parameters/QueryScope"
    get:
      operationId: get_library
      summary: Read a Library
      description: >
        Returns a library with all its functions.


        By default, this operation returns a global library.
        For a scoped library, you must specify the bucket and scope.
      security:
        - Global: []
        - Scope: []
      responses:
        "200":
          description: An object with a single property, giving information about the specified library.
          schema:
            $ref: "#/definitions/Functions"
        "400":
          $ref: "#/responses/BadRequest"
        "404":
          $ref: "#/responses/LibraryNotFound"
    post:
      operationId: post_library
      summary: Create or Update a Library
      description: >
        Creates the specified library and its associated functions.
        If the specified library exists, the existing library is overwritten.


        By default, this operation creates or updates a global library.
        For a scoped library, you must specify the bucket and scope.
      parameters:
        - $ref: "#/parameters/BodyLibrary"
      security:
        - Global: []
        - Scope: []
      responses:
        "200":
          $ref: "#/responses/OK"
        "400":
          description: >
            Bad request.
            The body of the request may be incorrect, or the path may not conform to the schema.
          schema:
            type: string
        "404":
          $ref: "#/responses/LibraryNotFound"
    delete:
      operationId: delete_library
      summary: Delete a Library
      description: |
        Deletes the specified library entirely.

        By default, this operation deletes a global library.
        For a scoped library, you must specify the bucket and scope.
      security:
        - Global: []
        - Scope: []
      responses:
        "200":
          $ref: "#/responses/OK"
        "400":
          $ref: "#/responses/BadRequest"
        "404":
          $ref: "#/responses/LibraryNotFound"

parameters:
  PathLibrary:
    name: library
    type: string
    in: path
    required: true
    description: The name of a library.

  QueryBucket: &queryBucket
    name: bucket
    type: string
    in: query
    required: false
    description: >
      For scoped libraries only.
      The bucket in which the library is stored.
    
  QueryScope: &queryScope
    name: scope
    type: string
    in: query
    required: false
    description: >
      For scoped libraries only.
      The scope in which the library is stored.

  BodyLibrary:
    in: body
    name: functions
    required: true
    description: The JavaScript code for all functions in the library.
    schema:
      type: string
      example: function f2c(f) { return (5/9)*(f-32); }

definitions:
  Libraries:
    type: object
    title: Library
    properties:
      name:
        type: string
        description: The name of a library.
        example: math
      bucket:
        type: string
        description: >
          For scoped libraries, the bucket in which the library is stored.
          For global libraries, this string is empty.
        example: travel-sample
      scope:
        type: string
        description: >
          For scoped libraries, the scope in which the library is stored.
          For global libraries, this string is empty.
        example: inventory
      code:
        type: string
        description: >
          The JavaScript code for all functions in the library.
        example: function add(a, b) { return a + b; }
                 function mul(a, b) { return a * b; }
    required:
      - name
      - bucket
      - scope
      - code

  Functions:
    type: object
    title: Functions
    properties:
      __library__:
        type: string
        description: |
          The JavaScript code for all functions in the library.

          The name of the property is the name of the library.
        example: function add(a, b) { return a + b; }
                 function mul(a, b) { return a * b; }
    required:
      - __library__

responses:
  OK:
    description: The operation was successful.
    schema:
      type: string

  LibraryNotFound:
    description: >
      Not found.
      The library name in the path may be incorrect, or the bucket and scope may be specified incorrectly.
    schema:
      type: string

  BadRequest:
    description: >
      Bad request.
      The path may not conform to the schema.
    schema:
      type: string

securityDefinitions:
  Global:
    type: basic
    description: |
      To manage global libraries, users must have the *Manage Global External Functions* RBAC role.

      This role enables you to create, read, update, or delete any global library, but does not give you access to any scoped libraries.

  Scope:
    type: basic
    description: |
      To manage scoped libraries, users must have the *Manage Scope External Functions* RBAC role, with permissions on the specified bucket and scope.

      This role enables you to create, read, update, or delete any library in the scope to which you have access, but does not give you access to any other scoped libraries.
      In addition, this role enables you to read any global library, but not to create, update, or delete them.
