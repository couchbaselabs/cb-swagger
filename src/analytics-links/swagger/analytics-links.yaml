swagger: '2.0'
info:
  title: Analytics Links REST API
  version: '6.6'
  description: |
    The Analytics Links REST API is provided by the Analytics service.
    This API enables you to manage the links to remote Couchbase clusters and external data sources.

    The API schemes and host URLs are as follows:

    * `http://node:8095/`
    * `https://node:18095/` (for secure access)

    where `node` is the host name or IP address of a node running the Analytics service.

produces:
  - application/json

consumes:
  - application/x-www-form-urlencoded

paths:
  /analytics/link:
    post:
      operationId: post_link
      summary: Create Link
      description: Creates a link.
      parameters:
        - $ref: "#/parameters/CommonDataverse"
        - $ref: "#/parameters/CommonName"
        - $ref: "#/parameters/CommonType"
        - $ref: "#/parameters/CouchbaseHostname"
        - $ref: "#/parameters/CouchbaseEncryption"
        - $ref: "#/parameters/CouchbaseUsername"
        - $ref: "#/parameters/CouchbasePassword"
        - $ref: "#/parameters/CouchbaseCertificate"
        - $ref: "#/parameters/CouchbaseClientCertificate"
        - $ref: "#/parameters/CouchbaseClientKey"
        - $ref: "#/parameters/S3AccessKeyID"
        - $ref: "#/parameters/S3SecretAccessKey"
        - $ref: "#/parameters/S3Region"
        - $ref: "#/parameters/S3ServiceEndpoint"
      security:
        - Default: []
      responses:
        "200":
          $ref: '#/responses/OK'
        "400":
          $ref: '#/responses/BadRequest'
        "500":
          $ref: '#/responses/InternalServerError'
    get:
      operationId: get_link
      summary: Query Links
      description: Returns information about the specified link or links.
      parameters:
        - name: dataverse
          type: string
          in: formData
          required: false
          description: >
            The name of the dataverse containing the link.
            If this parameter is omitted, all dataverses are queried for links.
        - name: name
          type: string
          in: formData
          required: false
          description: >
            The name of the link.
            If this parameter is specified, the dataverse name must be specified also.
            If this parameter is omitted, all links will be retrieved from the specified dataverses.
        - name: type
          type: string
          in: formData
          required: false
          description: >
            The type of the link.
            If this parameter is omitted, all link types are retrieved, excluding the `Local` link.
          enum:
            - S3
            - couchbase
      security:
        - Default: []
      responses:
        "200":
          description: >
            Success.
            Returns an array of objects, each of which contains information about a link.
          schema:
            type: array
            items:
              $ref: '#/definitions/Links'
        "400":
          $ref: '#/responses/BadRequest'
        "500":
          $ref: '#/responses/InternalServerError'
    put:
      operationId: put_link
      summary: Edit Link
      description: >
        Edits an existing link with the provided information.
        The link name, type, and dataverse name cannot be modified.
      parameters:
        - $ref: "#/parameters/CommonDataverse"
        - $ref: "#/parameters/CommonName"
        - name: type
          type: string
          in: formData
          required: false
          description: >
            The type of the link.
            If this parameter is specified, the value must match the type that was set when the link was created.
          enum:
            - s3
            - couchbase
        - $ref: "#/parameters/CouchbaseHostname"
        - $ref: "#/parameters/CouchbaseEncryption"
        - $ref: "#/parameters/CouchbaseUsername"
        - $ref: "#/parameters/CouchbasePassword"
        - $ref: "#/parameters/CouchbaseCertificate"
        - $ref: "#/parameters/CouchbaseClientCertificate"
        - $ref: "#/parameters/CouchbaseClientKey"
        - $ref: "#/parameters/S3AccessKeyID"
        - $ref: "#/parameters/S3SecretAccessKey"
        - $ref: "#/parameters/S3Region"
        - $ref: "#/parameters/S3ServiceEndpoint"
      security:
        - Default: []
      responses:
        "200":
          $ref: '#/responses/OK'
        "400":
          $ref: '#/responses/BadRequest'
        "500":
          $ref: '#/responses/InternalServerError'
    delete:
      operationId: delete_link
      summary: Delete Link
      description: >
        Deletes a link using the provided parameters.
        The link cannot be deleted if any other entities, such as datasets, are using it.
        The entities using the link need to be disconnected from the link, otherwise, the delete operation fails.
      parameters:
        - $ref: "#/parameters/CommonDataverse"
        - $ref: "#/parameters/CommonName"
      security:
        - Default: []
      responses:
        "200":
          $ref: '#/responses/OK'
        "400":
          $ref: '#/responses/BadRequest'
        "500":
          $ref: '#/responses/InternalServerError'

parameters:
  CommonDataverse:
    name: dataverse
    type: string
    in: formData
    required: true
    description: The name of the dataverse containing the link.

  CommonName:
    name: name
    type: string
    in: formData
    required: true
    description: The name of the link.

  CommonType:
    name: type
    type: string
    in: formData
    required: true
    description: |
      The type of the link.

      `couchbase`: A link to a remote Couchbase cluster.
      `s3`: A link to the Amazon S3 service.
    enum:
      - s3
      - couchbase

  S3AccessKeyID:
    name: accessKeyId
    type: string
    in: formData
    required: true
    description: >
      For S3 links only.
      The Amazon S3 access key ID.

  S3SecretAccessKey:
    name: secretAccessKey
    type: string
    in: formData
    required: true
    description: >
      For S3 links only.
      The Amazon S3 secret access key.

  S3Region:
    name: region
    type: string
    in: formData
    required: true
    description: >
      For S3 links only.
      The Amazon S3 region.

  S3ServiceEndpoint:
    name: serviceEndpoint
    type: string
    in: formData
    required: false
    description: >
      For S3 links only.
      The Amazon S3 service endpoint.

  CouchbaseHostname:
    name: hostname
    type: string
    in: formData
    required: true
    description: >
      For Couchbase links only.
      The remote hostname.

  CouchbaseUsername:
    name: username
    type: string
    in: formData
    required: false
    description: >
      For Couchbase links only.
      The remote username.
      Required for links with no encryption or half encryption.
      Required for links with full encryption if using a password.

  CouchbasePassword:
    name: password
    type: string
    in: formData
    required: false
    description: >
      For Couchbase links only.
      The remote password.
      Required for links with no encryption or half encryption.
      Required for links with full encryption if using a username.

  CouchbaseEncryption:
    name: encryption
    type: string
    in: formData
    required: true
    description: |
      For Couchbase links only. The type of encryption used by the link.

      `none`: Neither passwords nor data are encrypted.
      `half`: Passwords are encrypted using SCRAM-SHA, but data is not.
      `full`: All data and passwords are encrypted and TLS is used.
    enum:
      - none
      - half
      - full

  CouchbaseCertificate:
    name: certificate
    type: string
    in: formData
    required: false
    description: >
      For Couchbase links only.
      The content of the target cluster root certificate.
      Required for links with full encryption.

  CouchbaseClientCertificate:
    name: clientCertificate
    type: string
    in: formData
    required: false
    description: >
      For Couchbase links only.
      The content of the client certificate.
      Required for links with full encryption if using a client key.

  CouchbaseClientKey:
    name: clientKey
    type: string
    in: formData
    required: false
    description: >
      For Couchbase links only.
      The content of the client key.
      Required for links with full encryption if using a client certificate.

definitions:
  Links:
    description: These properties are common to all links.
    type: object
    discriminator: type
    required:
      - dataverse
      - name
      - type
    properties:
      dataverse:
        type: string
        description: The name of the dataverse containing the link.
        example: Default
      name:
        type: string
        description: The name of the link.
        example: myLink
      type:
        type: string
        description: |
          The type of the link.

          `couchbase`: A link to a remote Couchbase cluster.
          `s3`: A link to the Amazon S3 service.

          Different properties are returned, depending on the link type: refer to [Couchbase](#couchbase) or [S3](#s3).
        enum:
          - s3
          - couchbase

  Couchbase:
    description: These properties are returned for remote Couchbase links.
    allOf:
      - $ref: "#/definitions/Links"
      - type: object
        required:
          - activeHostname
          - bootstrapAlternateAddress
          - bootstrapHostname
          - certificate
          - clientCertificate
          - clientKey
          - clusterCompatibility
          - encryption
          - nodes
          - password
          - username
          - uuid
        properties:
          activeHostname:
            type: string
            description: The remote hostname.
            example: remoteHostName:8091
          bootstrapAlternateAddress:
            type: boolean
            description: Specifies whether the provided (bootstrap) hostname is an alternative address.
            example: false
          bootstrapHostname:
            type: string
            description: The provided (bootstrap) hostname.
            example: remoteHostName:8091
          certificate:
            type: string
            description: >
              The content of the target cluster root certificate.
              Only set for links with full encryption.
              If not set, this property returns `null`.
            example: null
          clientCertificate:
            type: string
            description: >
              The content of the client certificate.
              Only set for links with full encryption using client certificate and client key.
              If not set, this property returns `null`.
            example: null
          clientKey:
            type: string
            description: >
              The content of the client key.
              Only set for links with full encryption using client certificate and client key.
              If not set, this property returns `null`.
            example: null
          clusterCompatibility:
            type: integer
            description: For internal use only.
            example: 393221
          encryption:
            type: string
            description: |
              The type of encryption used by the link.

              `none`: Neither passwords nor data are encrypted.
              `half`: Passwords are encrypted using SCRAM-SHA, but data is not.
              `full`: All data and passwords are encrypted and TLS is used.
            enum:
              - none
              - half
              - full
          nodes:
            type: array
            description: An array of objects, each of which contains information about a node in the target cluster.
            items:
              type: object
              title: Nodes
              properties:
                alternateAddresses:
                  type: string
                  description: >
                    The alternate address defined on the node, if any.
                    If not defined, this property returns `null`.
                  example: null
                hostname:
                  type: string
                  description: >
                    The hostname of the node.
                    If not defined, this property returns `null`.
                  example: null
                services:
                  type: object
                  title: Services
                  description: An object giving information about the services and ports configured on this node.
                  properties:
                    cbas:
                      type: integer
                      description: The port number for a connection to the Analytics service.
                      example: 8095
                    cbasSSL:
                      type: integer
                      description: The port number for an encrypted connection to the Analytics service.
                      example: 18095
                    kv:
                      type: integer
                      description: The port number for a connection to the Data service.
                      example: 11210
                    kvSSL:
                      type: integer
                      description: The port number for an encrypted connection to the Data service.
                      example: 11207
                    mgmt:
                      type: integer
                      description: The port number for a connection to the Cluster Manager service.
                      example: 8091
                    mgmtSSL:
                      type: integer
                      description: The port number for an encrypted connection to the Cluster Manager service.
                      example: 18091
          password:
            type: string
            description: >
              The password used to connect to the link.
              This is redacted for the sake of security.
              Not set for links with full encryption using client certificate and client key.
              If not set, this property returns `null`.
            example: <redacted sensitive entry>
          username:
            type: string
            description: >
              The remote username.
              Not set for links with full encryption using client certificate and client key.
              If not set, this property returns `null`.
            example: remote.user
          uuid:
            type: string
            format: UUID
            description: A UUID uniquely identifying the link.
            example: 6331e2a390125b662f7bcfd63ecb3a73

  S3:
    description: These properties are returned for S3 links.
    allOf:
      - $ref: "#/definitions/Links"
      - type: object
        required:
          - accessKeyId
          - region
          - secretAccessKey
          - serviceEndpoint
        properties:
          accessKeyId:
            type: string
            description: The Amazon S3 access key ID.
            example: myAccessKey
          region:
            type: string
            description: The Amazon S3 region.
            example: us-east-1
          secretAccessKey:
            type: string
            description: >
              The Amazon S3 secret access key.
              This is redacted for the sake of security.
            example: <redacted sensitive entry>
          serviceEndpoint:
            type: string
            description: >
              Amazon S3 service endpoint.
              If not set, this property returns `null`.
            example: myEndpointUri

  Errors:
    type: object
    required:
      - error
    properties:
      error:
        type: string
        description: An error message.

responses:
  OK:
    description: The operation was successful.

  BadRequest:
    description: >
      Bad request.
      A parameter has an incorrect value.
    schema:
      $ref: "#/definitions/Errors"

  InternalServerError:
    description: >
      Internal Server Error.
      Incorrect path or port number, incorrect credentials, badly formatted parameters, or missing arguments.
    schema:
      $ref: "#/definitions/Errors"

securityDefinitions:
  Default:
    type: basic
    description: |
      The Analytics Links REST API supports admin credentials.
      Credentials can be passed via HTTP headers (HTTP basic authentication).

      Users must have Analytics link management privileges.
      Refer to [Roles](../learn/security/roles.html) for more details.