plugins {
    id("io.datapith.jayOverlay").version("0.1.11")
}

jayOverlay {
    targetFile.set("${projectDir}/build/bundle/eventing.yaml")
    overlayFile.set("${projectDir}/swagger/overlay.json")
    outputDir.set("${projectDir}/build/overlay")
}

apply plugin: 'org.openapi.generator'

task bundleSpec(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
    generatorName = "openapi-yaml"
    inputSpec = file("swagger/eventing.yaml").getAbsolutePath().toString()
    outputDir = "${projectDir}/build/bundle"
    globalProperties = [
            generateAliasAsModel: "true"
    ]
    additionalProperties = [
            outputFile: "eventing.yaml",
    ]
    generateAliasAsModel = true
}

openApiGenerate {
    generatorName = "asciidoc"
    inputSpec = file("build/overlay/eventing.yaml").getAbsolutePath().toString()
    outputDir = "${rootDir}/docs/modules/eventing-rest-api/pages"
    templateDir = "${rootDir}/templates"
    gitRepoId = "cb-swagger"
    gitUserId = "couchbaselabs"
    additionalProperties = [
            specDir: "${rootDir}/docs/modules/eventing-rest-api/partials/",
            snippetDir: "${rootDir}/docs/modules/eventing-rest-api/partials/paths/",
            headerAttributes: "true",
            useIntroduction: "true",
            useTableTitles: "true",
            skipExamples: "true",
            legacyDiscriminatorBehavior: "true"
    ]
    globalProperties = [
            generateAliasAsModel: "true"
    ]
    generateAliasAsModel = true
    modelNameMappings = [
            handler_schema: "Function Definition",
            function_scope_schema: "Function Scope",
            settings_schema: "Function Settings",
            depcfg_schema: "Deployment Config",
            depcfg_schema_buckets_inner: "Deployment Keyspace",
            depcfg_schema_constants_inner: "Deployment Constants",
            depcfg_schema_curl_inner: "Deployment URL"
    ]
}

tasks.applyOverlay.dependsOn(bundleSpec)
tasks.openApiGenerate.dependsOn(applyOverlay)
